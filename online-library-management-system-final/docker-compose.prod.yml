version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: library-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: library_db
      MYSQL_USER: ${DB_USERNAME:-library_user}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "${MYSQL_PORT:-3307}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - library-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      start_period: 30s

  # Spring Boot Backend
  backend:
    image: ${BACKEND_IMAGE:-ghcr.io/praveen0126-sys/online-library-management-system-final/backend:latest}
    container_name: library-backend
    restart: unless-stopped
    ports:
      - "${BACKEND_PORT:-8081}:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-prod}
      - SPRING_DATASOURCE_URL=${DB_URL:-jdbc:mysql://mysql:3306/library_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true}
      - SPRING_DATASOURCE_USERNAME=${DB_USERNAME:-library_user}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - library-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # React Frontend
  frontend:
    image: ${FRONTEND_IMAGE:-ghcr.io/praveen0126-sys/online-library-management-system-final/frontend:latest}
    container_name: library-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-3000}:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - library-network

  # Nginx Reverse Proxy (optional for production)
  nginx:
    image: nginx:alpine
    container_name: library-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${SSL_PORT:-443}:443"
    volumes:
      - ./nginx/prod.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - library-network

volumes:
  mysql_data:
    driver: local

networks:
  library-network:
    driver: bridge
