# Jenkins Agent Dockerfile for Library Management System
FROM jenkins/inbound-agent:latest

# Switch to root to install packages
USER root

# Install Docker CLI
RUN apt-get update && \
    apt-get install -y \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg \
    lsb-release \
    software-properties-common && \
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null && \
    apt-get update && \
    apt-get install -y docker-ce-cli

# Install Node.js and npm
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && \
    apt-get install -y nodejs

# Install OpenJDK 21
RUN apt-get install -y openjdk-21-jdk

# Install Maven
RUN apt-get install -y maven

# Install curl for health checks
RUN apt-get install -y curl

# Install Docker Compose
RUN curl -L "https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose && \
    chmod +x /usr/local/bin/docker-compose

# Install git (if not already present)
RUN apt-get install -y git

# Create working directory
RUN mkdir -p /home/jenkins/workspace/library-management-system

# Set environment variables
ENV JAVA_HOME=/usr/lib/jvm/java-21-openjdk-amd64
ENV PATH="$PATH:$JAVA_HOME/bin"
ENV NODE_ENV=production

# Switch back to jenkins user
USER jenkins

# Set working directory
WORKDIR /home/jenkins/workspace/library-management-system

# Expose any ports if needed
EXPOSE 8080 3000 3306

# Default command
CMD ["jenkins-agent"]
